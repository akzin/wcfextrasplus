//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace SampleClient.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ISoapHeadersSample", Namespace="http://tempuri.org/")]
    public partial class SoapHeadersSample : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NoHeadersOperationCompleted;
        
        private Header myHeaderField;
        
        private System.Threading.SendOrPostCallback InOperationCompleted;
        
        private System.Threading.SendOrPostCallback OutOperationCompleted;
        
        private System.Threading.SendOrPostCallback InOutOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SoapHeadersSample() {
            this.Url = global::SampleClient.Properties.Settings.Default.SampleClient_localhost_SoapHeadersSample;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public Header MyHeader {
            get {
                return this.myHeaderField;
            }
            set {
                this.myHeaderField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NoHeadersCompletedEventHandler NoHeadersCompleted;
        
        /// <remarks/>
        public event InCompletedEventHandler InCompleted;
        
        /// <remarks/>
        public event OutCompletedEventHandler OutCompleted;
        
        /// <remarks/>
        public event InOutCompletedEventHandler InOutCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCFExtrasPlus/Samples/ISoapHeadersSample/NoHeaders", RequestNamespace="http://WCFExtrasPlus/Samples", ResponseNamespace="http://WCFExtrasPlus/Samples", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NoHeaders() {
            this.Invoke("NoHeaders", new object[0]);
        }
        
        /// <remarks/>
        public void NoHeadersAsync() {
            this.NoHeadersAsync(null);
        }
        
        /// <remarks/>
        public void NoHeadersAsync(object userState) {
            if ((this.NoHeadersOperationCompleted == null)) {
                this.NoHeadersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNoHeadersOperationCompleted);
            }
            this.InvokeAsync("NoHeaders", new object[0], this.NoHeadersOperationCompleted, userState);
        }
        
        private void OnNoHeadersOperationCompleted(object arg) {
            if ((this.NoHeadersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NoHeadersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MyHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCFExtrasPlus/Samples/ISoapHeadersSample/In", RequestNamespace="http://WCFExtrasPlus/Samples", ResponseNamespace="http://WCFExtrasPlus/Samples", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string In() {
            object[] results = this.Invoke("In", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InAsync() {
            this.InAsync(null);
        }
        
        /// <remarks/>
        public void InAsync(object userState) {
            if ((this.InOperationCompleted == null)) {
                this.InOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInOperationCompleted);
            }
            this.InvokeAsync("In", new object[0], this.InOperationCompleted, userState);
        }
        
        private void OnInOperationCompleted(object arg) {
            if ((this.InCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InCompleted(this, new InCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MyHeader", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCFExtrasPlus/Samples/ISoapHeadersSample/Out", RequestNamespace="http://WCFExtrasPlus/Samples", ResponseNamespace="http://WCFExtrasPlus/Samples", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Out([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string value) {
            this.Invoke("Out", new object[] {
                        value});
        }
        
        /// <remarks/>
        public void OutAsync(string value) {
            this.OutAsync(value, null);
        }
        
        /// <remarks/>
        public void OutAsync(string value, object userState) {
            if ((this.OutOperationCompleted == null)) {
                this.OutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOutOperationCompleted);
            }
            this.InvokeAsync("Out", new object[] {
                        value}, this.OutOperationCompleted, userState);
        }
        
        private void OnOutOperationCompleted(object arg) {
            if ((this.OutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MyHeader", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://WCFExtrasPlus/Samples/ISoapHeadersSample/InOut", RequestNamespace="http://WCFExtrasPlus/Samples", ResponseNamespace="http://WCFExtrasPlus/Samples", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InOut() {
            this.Invoke("InOut", new object[0]);
        }
        
        /// <remarks/>
        public void InOutAsync() {
            this.InOutAsync(null);
        }
        
        /// <remarks/>
        public void InOutAsync(object userState) {
            if ((this.InOutOperationCompleted == null)) {
                this.InOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInOutOperationCompleted);
            }
            this.InvokeAsync("InOut", new object[0], this.InOutOperationCompleted, userState);
        }
        
        private void OnInOutOperationCompleted(object arg) {
            if ((this.InOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://WCFExtrasPlus/Samples")]
    [System.Xml.Serialization.XmlRootAttribute("MyHeader", Namespace="http://WCFExtrasPlus/Samples", IsNullable=true)]
    public partial class Header : System.Web.Services.Protocols.SoapHeader {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void NoHeadersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InCompletedEventHandler(object sender, InCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void OutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InOutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591