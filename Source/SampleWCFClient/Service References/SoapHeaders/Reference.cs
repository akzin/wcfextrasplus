//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleWCFClient.SoapHeaders {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Header", Namespace="http://WCFExtrasPlus/Samples")]
    [System.SerializableAttribute()]
    public partial class Header : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://WCFExtrasPlus/Samples", ConfigurationName="SoapHeaders.ISoapHeadersSample")]
    [WCFExtrasPlus.Soap.SoapHeadersAttribute()]
    public interface ISoapHeadersSample {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WCFExtrasPlus/Samples/ISoapHeadersSample/NoHeaders", ReplyAction="http://WCFExtrasPlus/Samples/ISoapHeadersSample/NoHeadersResponse")]
        void NoHeaders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WCFExtrasPlus/Samples/ISoapHeadersSample/In", ReplyAction="http://WCFExtrasPlus/Samples/ISoapHeadersSample/InResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("MyHeader", typeof(SampleWCFClient.SoapHeaders.Header), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.In)]
        string In();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WCFExtrasPlus/Samples/ISoapHeadersSample/Out", ReplyAction="http://WCFExtrasPlus/Samples/ISoapHeadersSample/OutResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("MyHeader", typeof(SampleWCFClient.SoapHeaders.Header), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.Out)]
        void Out(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WCFExtrasPlus/Samples/ISoapHeadersSample/InOut", ReplyAction="http://WCFExtrasPlus/Samples/ISoapHeadersSample/InOutResponse")]
        [WCFExtrasPlus.Soap.SoapHeaderAttribute("MyHeader", typeof(SampleWCFClient.SoapHeaders.Header), Direction=WCFExtrasPlus.Soap.SoapHeaderDirection.InOut)]
        void InOut();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISoapHeadersSampleChannel : SampleWCFClient.SoapHeaders.ISoapHeadersSample, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SoapHeadersSampleClient : System.ServiceModel.ClientBase<SampleWCFClient.SoapHeaders.ISoapHeadersSample>, SampleWCFClient.SoapHeaders.ISoapHeadersSample {
        
        public SoapHeadersSampleClient() {
        }
        
        public SoapHeadersSampleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SoapHeadersSampleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapHeadersSampleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapHeadersSampleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void NoHeaders() {
            base.Channel.NoHeaders();
        }
        
        public string In() {
            return base.Channel.In();
        }
        
        public void Out(string value) {
            base.Channel.Out(value);
        }
        
        public void InOut() {
            base.Channel.InOut();
        }
    }
}
